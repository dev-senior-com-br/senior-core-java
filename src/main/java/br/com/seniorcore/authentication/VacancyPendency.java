/*
 * hcm-recruitment
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: ${version}
 * Contact: seniorx-dev@senior.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Employee;
import io.swagger.client.model.Vacancy;
import io.swagger.client.model.VacancyPendencyTypeDto;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * VacancyPendency
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-07-15T17:37:52.386Z")
public class VacancyPendency {
  @SerializedName("responsible")
  private Employee responsible = null;

  @SerializedName("responsibleId")
  private String responsibleId = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("pendingWhen")
  private OffsetDateTime pendingWhen = null;

  @SerializedName("type")
  private VacancyPendencyTypeDto type = null;

  @SerializedName("vacancy")
  private Vacancy vacancy = null;

  @SerializedName("vacancyId")
  private String vacancyId = null;

  public VacancyPendency responsible(Employee responsible) {
    this.responsible = responsible;
    return this;
  }

   /**
   * Get responsible
   * @return responsible
  **/
  @ApiModelProperty(value = "")
  public Employee getResponsible() {
    return responsible;
  }

  public void setResponsible(Employee responsible) {
    this.responsible = responsible;
  }

  public VacancyPendency responsibleId(String responsibleId) {
    this.responsibleId = responsibleId;
    return this;
  }

   /**
   * Identificador do colaborar
   * @return responsibleId
  **/
  @ApiModelProperty(required = true, value = "Identificador do colaborar")
  public String getResponsibleId() {
    return responsibleId;
  }

  public void setResponsibleId(String responsibleId) {
    this.responsibleId = responsibleId;
  }

  public VacancyPendency id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identificador da entidade.
   * @return id
  **/
  @ApiModelProperty(value = "Identificador da entidade.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public VacancyPendency pendingWhen(OffsetDateTime pendingWhen) {
    this.pendingWhen = pendingWhen;
    return this;
  }

   /**
   * Data e hora da pendencia.
   * @return pendingWhen
  **/
  @ApiModelProperty(required = true, value = "Data e hora da pendencia.")
  public OffsetDateTime getPendingWhen() {
    return pendingWhen;
  }

  public void setPendingWhen(OffsetDateTime pendingWhen) {
    this.pendingWhen = pendingWhen;
  }

  public VacancyPendency type(VacancyPendencyTypeDto type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(required = true, value = "")
  public VacancyPendencyTypeDto getType() {
    return type;
  }

  public void setType(VacancyPendencyTypeDto type) {
    this.type = type;
  }

  public VacancyPendency vacancy(Vacancy vacancy) {
    this.vacancy = vacancy;
    return this;
  }

   /**
   * Get vacancy
   * @return vacancy
  **/
  @ApiModelProperty(value = "")
  public Vacancy getVacancy() {
    return vacancy;
  }

  public void setVacancy(Vacancy vacancy) {
    this.vacancy = vacancy;
  }

  public VacancyPendency vacancyId(String vacancyId) {
    this.vacancyId = vacancyId;
    return this;
  }

   /**
   * Identificador da vaga.
   * @return vacancyId
  **/
  @ApiModelProperty(required = true, value = "Identificador da vaga.")
  public String getVacancyId() {
    return vacancyId;
  }

  public void setVacancyId(String vacancyId) {
    this.vacancyId = vacancyId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VacancyPendency vacancyPendency = (VacancyPendency) o;
    return Objects.equals(this.responsible, vacancyPendency.responsible) &&
        Objects.equals(this.responsibleId, vacancyPendency.responsibleId) &&
        Objects.equals(this.id, vacancyPendency.id) &&
        Objects.equals(this.pendingWhen, vacancyPendency.pendingWhen) &&
        Objects.equals(this.type, vacancyPendency.type) &&
        Objects.equals(this.vacancy, vacancyPendency.vacancy) &&
        Objects.equals(this.vacancyId, vacancyPendency.vacancyId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(responsible, responsibleId, id, pendingWhen, type, vacancy, vacancyId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VacancyPendency {\n");
    
    sb.append("    responsible: ").append(toIndentedString(responsible)).append("\n");
    sb.append("    responsibleId: ").append(toIndentedString(responsibleId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    pendingWhen: ").append(toIndentedString(pendingWhen)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    vacancy: ").append(toIndentedString(vacancy)).append("\n");
    sb.append("    vacancyId: ").append(toIndentedString(vacancyId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

