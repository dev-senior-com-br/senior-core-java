/*
 * hcm-recruitment
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: ${version}
 * Contact: seniorx-dev@senior.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Flow;
import io.swagger.client.model.ProcessTypeDto;
import java.io.IOException;

/**
 * FlowProcessSettings
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-07-15T19:10:27.342Z")
public class FlowProcessSettings {
  @SerializedName("id")
  private String id = null;

  @SerializedName("processType")
  private ProcessTypeDto processType = null;

  @SerializedName("flowId")
  private String flowId = null;

  @SerializedName("flow")
  private Flow flow = null;

  public FlowProcessSettings id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identificador único da entidade.
   * @return id
  **/
  @ApiModelProperty(value = "Identificador único da entidade.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public FlowProcessSettings processType(ProcessTypeDto processType) {
    this.processType = processType;
    return this;
  }

   /**
   * Get processType
   * @return processType
  **/
  @ApiModelProperty(value = "")
  public ProcessTypeDto getProcessType() {
    return processType;
  }

  public void setProcessType(ProcessTypeDto processType) {
    this.processType = processType;
  }

  public FlowProcessSettings flowId(String flowId) {
    this.flowId = flowId;
    return this;
  }

   /**
   * ID do fluxo a qual este processo referência.
   * @return flowId
  **/
  @ApiModelProperty(value = "ID do fluxo a qual este processo referência.")
  public String getFlowId() {
    return flowId;
  }

  public void setFlowId(String flowId) {
    this.flowId = flowId;
  }

  public FlowProcessSettings flow(Flow flow) {
    this.flow = flow;
    return this;
  }

   /**
   * Get flow
   * @return flow
  **/
  @ApiModelProperty(value = "")
  public Flow getFlow() {
    return flow;
  }

  public void setFlow(Flow flow) {
    this.flow = flow;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlowProcessSettings flowProcessSettings = (FlowProcessSettings) o;
    return Objects.equals(this.id, flowProcessSettings.id) &&
        Objects.equals(this.processType, flowProcessSettings.processType) &&
        Objects.equals(this.flowId, flowProcessSettings.flowId) &&
        Objects.equals(this.flow, flowProcessSettings.flow);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, processType, flowId, flow);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlowProcessSettings {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    processType: ").append(toIndentedString(processType)).append("\n");
    sb.append("    flowId: ").append(toIndentedString(flowId)).append("\n");
    sb.append("    flow: ").append(toIndentedString(flow)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

