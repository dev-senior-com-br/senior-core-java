/*
 * hcm-recruitment
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: ${version}
 * Contact: seniorx-dev@senior.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Chat;
import io.swagger.client.model.Employee;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * ChatMessage
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-07-15T19:19:08.550Z")
public class ChatMessage {
  @SerializedName("createdAt")
  private OffsetDateTime createdAt = null;

  @SerializedName("chatId")
  private String chatId = null;

  @SerializedName("edited")
  private Boolean edited = null;

  @SerializedName("chat")
  private Chat chat = null;

  @SerializedName("employeeId")
  private String employeeId = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("employee")
  private Employee employee = null;

  @SerializedName("content")
  private String content = null;

  @SerializedName("updatedAt")
  private OffsetDateTime updatedAt = null;

  public ChatMessage createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Data e hora do envio da mensagem.
   * @return createdAt
  **/
  @ApiModelProperty(value = "Data e hora do envio da mensagem.")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public ChatMessage chatId(String chatId) {
    this.chatId = chatId;
    return this;
  }

   /**
   * ID do chat a qual esta mensagem pertence.
   * @return chatId
  **/
  @ApiModelProperty(value = "ID do chat a qual esta mensagem pertence.")
  public String getChatId() {
    return chatId;
  }

  public void setChatId(String chatId) {
    this.chatId = chatId;
  }

  public ChatMessage edited(Boolean edited) {
    this.edited = edited;
    return this;
  }

   /**
   * Representa se a mensagem foi editada após o envio.
   * @return edited
  **/
  @ApiModelProperty(value = "Representa se a mensagem foi editada após o envio.")
  public Boolean isEdited() {
    return edited;
  }

  public void setEdited(Boolean edited) {
    this.edited = edited;
  }

  public ChatMessage chat(Chat chat) {
    this.chat = chat;
    return this;
  }

   /**
   * Get chat
   * @return chat
  **/
  @ApiModelProperty(value = "")
  public Chat getChat() {
    return chat;
  }

  public void setChat(Chat chat) {
    this.chat = chat;
  }

  public ChatMessage employeeId(String employeeId) {
    this.employeeId = employeeId;
    return this;
  }

   /**
   * ID do colaborador que enviou esta mensagem.
   * @return employeeId
  **/
  @ApiModelProperty(value = "ID do colaborador que enviou esta mensagem.")
  public String getEmployeeId() {
    return employeeId;
  }

  public void setEmployeeId(String employeeId) {
    this.employeeId = employeeId;
  }

  public ChatMessage id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identificador único da entidade.
   * @return id
  **/
  @ApiModelProperty(value = "Identificador único da entidade.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ChatMessage employee(Employee employee) {
    this.employee = employee;
    return this;
  }

   /**
   * Get employee
   * @return employee
  **/
  @ApiModelProperty(value = "")
  public Employee getEmployee() {
    return employee;
  }

  public void setEmployee(Employee employee) {
    this.employee = employee;
  }

  public ChatMessage content(String content) {
    this.content = content;
    return this;
  }

   /**
   * Conteúdo da mensagem.
   * @return content
  **/
  @ApiModelProperty(required = true, value = "Conteúdo da mensagem.")
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }

  public ChatMessage updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Data e hora da última edição da mensagem (Se for o caso).
   * @return updatedAt
  **/
  @ApiModelProperty(value = "Data e hora da última edição da mensagem (Se for o caso).")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChatMessage chatMessage = (ChatMessage) o;
    return Objects.equals(this.createdAt, chatMessage.createdAt) &&
        Objects.equals(this.chatId, chatMessage.chatId) &&
        Objects.equals(this.edited, chatMessage.edited) &&
        Objects.equals(this.chat, chatMessage.chat) &&
        Objects.equals(this.employeeId, chatMessage.employeeId) &&
        Objects.equals(this.id, chatMessage.id) &&
        Objects.equals(this.employee, chatMessage.employee) &&
        Objects.equals(this.content, chatMessage.content) &&
        Objects.equals(this.updatedAt, chatMessage.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, chatId, edited, chat, employeeId, id, employee, content, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChatMessage {\n");
    
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    chatId: ").append(toIndentedString(chatId)).append("\n");
    sb.append("    edited: ").append(toIndentedString(edited)).append("\n");
    sb.append("    chat: ").append(toIndentedString(chat)).append("\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    employee: ").append(toIndentedString(employee)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

