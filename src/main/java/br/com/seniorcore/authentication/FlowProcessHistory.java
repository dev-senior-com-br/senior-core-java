/*
 * hcm-recruitment
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: ${version}
 * Contact: seniorx-dev@senior.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.FlowProcess;
import io.swagger.client.model.FlowProcessAprovationTypeDto;
import io.swagger.client.model.FlowStep;
import io.swagger.client.model.Person;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * FlowProcessHistory
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-07-15T17:37:52.386Z")
public class FlowProcessHistory {
  @SerializedName("approver")
  private Person approver = null;

  @SerializedName("sequence")
  private Integer sequence = null;

  @SerializedName("dateWhen")
  private OffsetDateTime dateWhen = null;

  @SerializedName("decision")
  private FlowProcessAprovationTypeDto decision = null;

  @SerializedName("approverId")
  private String approverId = null;

  @SerializedName("flowProcessId")
  private String flowProcessId = null;

  @SerializedName("flowProcess")
  private FlowProcess flowProcess = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("flowStepId")
  private String flowStepId = null;

  @SerializedName("justification")
  private String justification = null;

  @SerializedName("flowStep")
  private FlowStep flowStep = null;

  public FlowProcessHistory approver(Person approver) {
    this.approver = approver;
    return this;
  }

   /**
   * Get approver
   * @return approver
  **/
  @ApiModelProperty(value = "")
  public Person getApprover() {
    return approver;
  }

  public void setApprover(Person approver) {
    this.approver = approver;
  }

  public FlowProcessHistory sequence(Integer sequence) {
    this.sequence = sequence;
    return this;
  }

   /**
   * Sequence do aprovador
   * @return sequence
  **/
  @ApiModelProperty(value = "Sequence do aprovador")
  public Integer getSequence() {
    return sequence;
  }

  public void setSequence(Integer sequence) {
    this.sequence = sequence;
  }

  public FlowProcessHistory dateWhen(OffsetDateTime dateWhen) {
    this.dateWhen = dateWhen;
    return this;
  }

   /**
   * Data da aprovação
   * @return dateWhen
  **/
  @ApiModelProperty(value = "Data da aprovação")
  public OffsetDateTime getDateWhen() {
    return dateWhen;
  }

  public void setDateWhen(OffsetDateTime dateWhen) {
    this.dateWhen = dateWhen;
  }

  public FlowProcessHistory decision(FlowProcessAprovationTypeDto decision) {
    this.decision = decision;
    return this;
  }

   /**
   * Get decision
   * @return decision
  **/
  @ApiModelProperty(value = "")
  public FlowProcessAprovationTypeDto getDecision() {
    return decision;
  }

  public void setDecision(FlowProcessAprovationTypeDto decision) {
    this.decision = decision;
  }

  public FlowProcessHistory approverId(String approverId) {
    this.approverId = approverId;
    return this;
  }

   /**
   * Identificador do aprovador
   * @return approverId
  **/
  @ApiModelProperty(value = "Identificador do aprovador")
  public String getApproverId() {
    return approverId;
  }

  public void setApproverId(String approverId) {
    this.approverId = approverId;
  }

  public FlowProcessHistory flowProcessId(String flowProcessId) {
    this.flowProcessId = flowProcessId;
    return this;
  }

   /**
   * Identificador do processo referenciado
   * @return flowProcessId
  **/
  @ApiModelProperty(value = "Identificador do processo referenciado")
  public String getFlowProcessId() {
    return flowProcessId;
  }

  public void setFlowProcessId(String flowProcessId) {
    this.flowProcessId = flowProcessId;
  }

  public FlowProcessHistory flowProcess(FlowProcess flowProcess) {
    this.flowProcess = flowProcess;
    return this;
  }

   /**
   * Get flowProcess
   * @return flowProcess
  **/
  @ApiModelProperty(value = "")
  public FlowProcess getFlowProcess() {
    return flowProcess;
  }

  public void setFlowProcess(FlowProcess flowProcess) {
    this.flowProcess = flowProcess;
  }

  public FlowProcessHistory id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identificador único da entidade.
   * @return id
  **/
  @ApiModelProperty(value = "Identificador único da entidade.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public FlowProcessHistory flowStepId(String flowStepId) {
    this.flowStepId = flowStepId;
    return this;
  }

   /**
   * Identificador do passo do fluxo de aprovação
   * @return flowStepId
  **/
  @ApiModelProperty(value = "Identificador do passo do fluxo de aprovação")
  public String getFlowStepId() {
    return flowStepId;
  }

  public void setFlowStepId(String flowStepId) {
    this.flowStepId = flowStepId;
  }

  public FlowProcessHistory justification(String justification) {
    this.justification = justification;
    return this;
  }

   /**
   * Justificativa em caso de rejeição
   * @return justification
  **/
  @ApiModelProperty(required = true, value = "Justificativa em caso de rejeição")
  public String getJustification() {
    return justification;
  }

  public void setJustification(String justification) {
    this.justification = justification;
  }

  public FlowProcessHistory flowStep(FlowStep flowStep) {
    this.flowStep = flowStep;
    return this;
  }

   /**
   * Get flowStep
   * @return flowStep
  **/
  @ApiModelProperty(value = "")
  public FlowStep getFlowStep() {
    return flowStep;
  }

  public void setFlowStep(FlowStep flowStep) {
    this.flowStep = flowStep;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlowProcessHistory flowProcessHistory = (FlowProcessHistory) o;
    return Objects.equals(this.approver, flowProcessHistory.approver) &&
        Objects.equals(this.sequence, flowProcessHistory.sequence) &&
        Objects.equals(this.dateWhen, flowProcessHistory.dateWhen) &&
        Objects.equals(this.decision, flowProcessHistory.decision) &&
        Objects.equals(this.approverId, flowProcessHistory.approverId) &&
        Objects.equals(this.flowProcessId, flowProcessHistory.flowProcessId) &&
        Objects.equals(this.flowProcess, flowProcessHistory.flowProcess) &&
        Objects.equals(this.id, flowProcessHistory.id) &&
        Objects.equals(this.flowStepId, flowProcessHistory.flowStepId) &&
        Objects.equals(this.justification, flowProcessHistory.justification) &&
        Objects.equals(this.flowStep, flowProcessHistory.flowStep);
  }

  @Override
  public int hashCode() {
    return Objects.hash(approver, sequence, dateWhen, decision, approverId, flowProcessId, flowProcess, id, flowStepId, justification, flowStep);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlowProcessHistory {\n");
    
    sb.append("    approver: ").append(toIndentedString(approver)).append("\n");
    sb.append("    sequence: ").append(toIndentedString(sequence)).append("\n");
    sb.append("    dateWhen: ").append(toIndentedString(dateWhen)).append("\n");
    sb.append("    decision: ").append(toIndentedString(decision)).append("\n");
    sb.append("    approverId: ").append(toIndentedString(approverId)).append("\n");
    sb.append("    flowProcessId: ").append(toIndentedString(flowProcessId)).append("\n");
    sb.append("    flowProcess: ").append(toIndentedString(flowProcess)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    flowStepId: ").append(toIndentedString(flowStepId)).append("\n");
    sb.append("    justification: ").append(toIndentedString(justification)).append("\n");
    sb.append("    flowStep: ").append(toIndentedString(flowStep)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

