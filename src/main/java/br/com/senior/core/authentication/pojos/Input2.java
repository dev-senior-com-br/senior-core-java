/*
 * Autenticação
 * Responsável pela autenticação na plataforma G7.
 *
 * OpenAPI spec version: 4.24.0
 * Contact: seniorx-dev@senior.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package br.com.senior.core.authentication.pojos;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Input2
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-08-13T19:09:13.383Z")



public class Input2 {
  @SerializedName("temporaryToken")
  private String temporaryToken = null;

  @SerializedName("newPassword")
  private String newPassword = null;

  @SerializedName("username")
  private String username = null;

  public Input2 temporaryToken(String temporaryToken) {
    this.temporaryToken = temporaryToken;
    return this;
  }

   /**
   * Teken temporário retornado pela primitiva &amp;#39;login&amp;#39;.
   * @return temporaryToken
  **/
  @ApiModelProperty(required = true, value = "Teken temporário retornado pela primitiva &#39;login&#39;.")
  public String getTemporaryToken() {
    return temporaryToken;
  }

  public void setTemporaryToken(String temporaryToken) {
    this.temporaryToken = temporaryToken;
  }

  public Input2 newPassword(String newPassword) {
    this.newPassword = newPassword;
    return this;
  }

   /**
   * Nova senha que deve ser atribuída ao usuário associado ao token temporário
   * @return newPassword
  **/
  @ApiModelProperty(required = true, value = "Nova senha que deve ser atribuída ao usuário associado ao token temporário")
  public String getNewPassword() {
    return newPassword;
  }

  public void setNewPassword(String newPassword) {
    this.newPassword = newPassword;
  }

  public Input2 username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Nome do usuário incluindo o domínio. Exemplo: ana.silva@senior.com.br.
   * @return username
  **/
  @ApiModelProperty(required = true, value = "Nome do usuário incluindo o domínio. Exemplo: ana.silva@senior.com.br.")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Input2 input2 = (Input2) o;
    return Objects.equals(this.temporaryToken, input2.temporaryToken) &&
        Objects.equals(this.newPassword, input2.newPassword) &&
        Objects.equals(this.username, input2.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(temporaryToken, newPassword, username);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Input2 {\n");
    
    sb.append("    temporaryToken: ").append(toIndentedString(temporaryToken)).append("\n");
    sb.append("    newPassword: ").append(toIndentedString(newPassword)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

